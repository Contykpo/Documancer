<!DOCTYPE html>

<html lang="en">

    <head>
        <meta charset="utf-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <base href="/"/>
        <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet"/>
        <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet"/>
        <link href="css/app.css" rel="stylesheet"/>
        <link href="Documancer.Server.UI.styles.css" rel="stylesheet"/>
        <HeadOutlet @rendermode="RenderModeForPage"/>
        <!-- SEO Meta Tags -->
        <meta name="description" content="This repository hosts a Blazor Server application designed with Clean Architecture principles, featuring a sophisticated user interface and an efficient code generator. This setup allows for the swift creation of remarkable web applications using .NET Blazor technology." />
        <meta name="keywords" content="Clean Architecture, Blazor Server, Docker Image, CI, .NET, Web Applications, Code Generator" />
        <title>Clean Architecture With Blazor Server</title>
    </head>

    <body>
        <Routes @rendermode="RenderModeForPage"/>
        <script src="_framework/blazor.web.js"></script>
        <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    </body>

</html>


@code
{
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments("/pages/authentication")
        ? null
        : new InteractiveServerRenderMode(false);

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

}