@page "/profile"

@using System.Security.Claims
@using Application.Features.CampaignFeatures.DataTransferObjects
@using Application.Features.AuthenticationFeatures.DataTransferObjects

@inject IDialogService DialogService
@inject IStringLocalizer<ProfileResource> Localizer
@inject ISnackbar Snackbar

<AuthorizeView>
    <Authorized>
        <MudContainer Class="mt-8">
            <MudGrid Spacing="3" Justify="Justify.Center">
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="rounded-lg pb-4" Style="margin-bottom: 16px; padding: 16px; ">

                        <!-- Extension Information -->
                        <MudGrid Gutter="0" Justify="Justify.FlexStart">
                            <MudItem xs="9">
                                <!-- Text Rows -->
                                <MudText Typo="Typo.h6">@context.User.Identity!.Name</MudText>
                                <MudText Typo="Typo.body1" Align="Align.Left">@context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)!.Value</MudText>
                            </MudItem>
                            <MudItem xs="3">
                                <!-- Button Row -->
                                <MudCardActions Class="mt-2 justify-center">
                                    <MudButton Href="/logout" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">@Localizer["Log Out"]</MudButton>
                                </MudCardActions>
                            </MudItem>
                        </MudGrid>

                    </MudPaper>
                </MudItem>

                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="rounded-lg pb-4" Style="margin-bottom: 16px; padding: 16px; ">
                        <!-- Text Rows -->
                        <MudText Typo="Typo.h6">@Localizer["Campaigns"]</MudText>
                        <MudText Typo="Typo.body1" Align="Align.Left">
                            @Localizer["Create a campaign to log your story events."]
                        </MudText>
                        <MudText Typo="Typo.body1" Align="Align.Left">
                            @Localizer["Ongoing campaigns: "]@*+ {GetActiveCampaigns()} + Localizer["of"] + {GetUserCampaignLimit()}*@
                        </MudText>

                        <!-- Nested Campaign MediaCards Row -->
                        <MudGrid Class="mt-2" Gutter="0" Justify="Justify.FlexStart">

                            @foreach (var campaign in Campaigns)
                            {
                                // Convert the image to a base64 string for previewing
                                var src = Convert.ToBase64String(campaign.Data!);

                                // Set the image source for preview in the UI
                                var imagesrc = $"data:{campaign.ContentType};base64,{src}";

                                <MudItem xs="12" sm="6" md="4" Style="display:flex; max-height: 350px;">
                                    <MudCard Class="p-2" Elevation="2">
                                        <MudCardMedia Image="@imagesrc" Style="display:flex; width: 350px; height: 200px;">
                                            <MudImage Src="@imagesrc" Fluid="true" Width="350" Height="200" Class="rounded-lg"></MudImage>
                                        </MudCardMedia>
                                        <MudCardContent Style="min-height: 110px;">
                                            <MudText Typo="Typo.h5">@campaign.Name</MudText>
                                            <MudText Typo="Typo.body2">@StringHelpers.TruncateText(campaign.Description, maxDescriptionLength)</MudText>
                                        </MudCardContent>
                                        <MudCardActions>
                                            <MudButton Variant="Variant.Text" Color="Color.Primary">@Localizer["Edit"]</MudButton>
                                        </MudCardActions>
                                    </MudCard>
                                </MudItem>
                            }

                        </MudGrid>

                        <!-- Create a New Campaign Button Row -->
                        <MudButton Class="mt-2 d-flex justify-center" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" OnClick="OpenCampaignCreationDialog">@Localizer["CREATE A NEW CAMPAIGN"]</MudButton>
                        
                    </MudPaper>
                </MudItem>

                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="rounded-lg pb-4" Style="margin-bottom: 16px; padding: 16px; ">

                        <!-- Extension Information -->
                        <MudGrid Gutter="0" Justify="Justify.FlexStart">
                            <MudItem xs="9">
                                <!-- Text Rows -->
                                <MudText Typo="Typo.h6">@Localizer["Extensions"]</MudText>
                                <MudText Typo="Typo.body1" Align="Align.Left">
                                    @Localizer["Extend the functionality of Documancer with great first and third-party extensions."]
                                </MudText>
                            </MudItem>
                            <MudItem xs="3">
                                <!-- Button Row -->
                                <MudCardActions Class="mt-2 justify-center">
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">@Localizer["Manage"]</MudButton>
                                </MudCardActions>
                            </MudItem>
                        </MudGrid>

                        <!-- Nested Extension MediaCards Row -->
                        <MudGrid Class="mt-2" Gutter="0" Justify="Justify.FlexStart">
                            <MudItem xs="6">
                                <MudPaper Class="p-2" Elevation="1" Color="Color.Primary">
                                    <MudText Typo="Typo.body2" Align="Align.Left">Nested Panel 1</MudText>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="p-2" Elevation="1" Color="Color.Secondary">
                                    <MudText Typo="Typo.body2" Align="Align.Left">Nested Panel 2</MudText>
                                </MudPaper>
                            </MudItem>
                        </MudGrid>

                    </MudPaper>
                </MudItem>

            </MudGrid>
        </MudContainer>
    </Authorized>
</AuthorizeView>


@code
{
    public List<CampaignDTO> Campaigns = new List<CampaignDTO>();

    public List<string> BannerImageSources = new List<string>();

    private int maxDescriptionLength = 150;


    protected override async Task OnInitializedAsync()
    {
        var customAuthenticationStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        var authenticationState = await customAuthenticationStateProvider.GetAuthenticationStateAsync();

        var userData = await UserAccountService.GetUserCampaignsAsync(new UserDataDTO
            {
                EmailAddress = authenticationState.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)!.Value
            });

        if (userData.Flag && userData.Campaigns != null)
        {
            foreach (var campaign in userData.Campaigns)
            {
                Campaigns.Add(campaign);
            }

            Snackbar.Add($"{userData.Message} Campaigns count: {userData.Campaigns.Count}.", MudBlazor.Severity.Success);
        }
    }

    private Task OpenCampaignCreationDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<CampaignCreation>("Campaign Creation Dialog", options);
    }

}