@page "/campaign/{campaignId:guid}"

@using Application.Features.CampaignFeatures.DataTransferObjects
@using Application.Features.SessionFeatures.DataTransferObjects
@using Application.Features.AuthenticationFeatures.DataTransferObjects

@inject ISnackbar Snackbar
@* @inject IStringLocalizer<CampaignResource> Localizer *@


@if (Campaign != null)
{
    <MudGrid Spacing="2" class="pt-2" Style="height: 95vh;">
        
        <!-- Left Panel for Sessions -->
        <MudItem xs="3" Style="height: 100%;">
            <MudPaper Class="p-2" Style="height: 100%; display: flex; flex-direction: column;">
                <MudText Typo="Typo.h6">@Campaign.Name Sessions</MudText>

                <MudButton Class="pt-3 m-3 d-flex justify-center" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" OnClick="CreateNewSession">NEW SESSION</MudButton>

                @if (CampaignSessions != null)
                {
                    <MudStack Spacing="2" Style="flex-grow: 1; overflow-y: auto; padding-top: 1rem;">
                        @foreach (var session in CampaignSessions)
                        {
                            <MudPaper Class="pa-3">
                                <MudText Typo="Typo.body1">@session.CreationDate.Date.ToString()</MudText>
                            </MudPaper>
                        }
                    </MudStack>
                }

            </MudPaper>
        </MudItem>

        <!-- Chat Box Panel -->
        <MudItem xs="6" Style="height: 100%;">
            <MudPaper Elevation="25" Style="height: 100%; display: flex; flex-direction: column;">
                <MudToolBar Dense="true">
                    @if (Campaign is null)
                    {
                        <MudIcon Icon="@Icons.Material.Outlined.Person" Style="margin-right:10px"></MudIcon>
                        <MudText Typo="Typo.h6">Chat</MudText>
                    }
                    else
                    {
                        <MudIcon Icon="@Icons.Material.Outlined.ChatBubble" Style="margin-right:10px"></MudIcon>
                        <MudText Typo="Typo.h6">Dungeon GPT</MudText>
                    }
                </MudToolBar>

                <!-- Messages Container -->
                <div style="flex-grow: 1; overflow-y: auto; padding: 0 16px;" id="chatContainer">
                    @foreach (var message in messages)
                    {
                        <div class="d-flex flex-row my-4">
                            <div class="mr-4">
                                <MudAvatar Color="Color.Secondary" Style="height:50px; width:50px;">@message.UserEmail.ToUpper().FirstOrDefault()</MudAvatar>
                            </div>
                            <div>
                                <MudText Typo="Typo.body1">@message.UserEmail</MudText>
                                <MudText Typo="Typo.caption" Style="font-size: xx-small!important;">@message.CreatedDate.ToString("dd MMM, yyyy hh:mm tt")</MudText>
                                <MudText Typo="Typo.body2" Style=" padding: 15px;background-color: var(--mud-palette-background-grey);border-radius: 5px;margin-top:5px">@message.Message</MudText>
                            </div>
                        </div>
                    }
                </div>

                <!-- Message Input Section at Bottom -->
                <MudPaper Elevation="25" Class="d-flex flex-row px-2 mx-4 mt-2" Style="align-items: center;">
                    <MudTextField T="string" Placeholder="Enter your message..." DisableUnderLine="true" Class="mt-n2 mx-4" @bind-Value="CurrentMessage" />
                    <MudButton OnClick="SubmitAsync" StartIcon="@Icons.Material.Outlined.Send" Color="Color.Secondary">Send</MudButton>
                </MudPaper>
            </MudPaper>
        </MudItem>

        <!-- Placeholder for Campaign Properties Menu -->
        <MudItem xs="3" Style="height: 100%;">
            <MudPaper Class="p-2" Style="height: 100%; display: flex; flex-direction: column;">
                <MudText Typo="Typo.h5">Campaign Properties</MudText>
                <MudText Typo="Typo.h5">@Campaign.Name</MudText>
                <MudText Typo="Typo.body2">@Campaign.Description</MudText>
            </MudPaper>
        </MudItem>
    
    </MudGrid>

}
else
{
    <MudText Typo="Typo.h6">Loading campaign data...</MudText>
}

@code
{
    [Parameter]
    public Guid campaignId { get; set; }

    public CampaignDTO Campaign { get; set; }

    public List<SessionDTO> CampaignSessions { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        var response = await CampaignService.GetCampaignAsync(campaignId);

        Campaign = response.Campaign;

        CampaignSessions = Campaign.Sessions;
    }

    private async Task CreateNewSession()
    {
        try
        {
            var result = await CampaignService.CreateCampaignSessionAsync(new SessionDTO
            {
                OwnerCampaignId = campaignId,
                CreationDate = DateTimeOffset.Now
            });

            if (result.Flag)
            {
                NavigationManager.NavigateTo($"/campaign/{campaignId}", forceLoad: true);
            }

            Snackbar.Add(result.Message, result.Flag ? MudBlazor.Severity.Success : MudBlazor.Severity.Error);
        }
        catch
        {
            return;
        }
    }

    private async Task SubmitAsync()
    {
        
    }


    #region Messages

    public string CurrentMessage { get; set; }

    private List<ChatMessage> messages = new List<ChatMessage>();

    public class ChatMessage
    {
        public Guid Id { get; set; }

        public string FromUserId { get; set; }
        public string ToUserId { get; set; }
        public string Message { get; set; }
        
        public string UserEmail { get; set; }


        public DateTime CreatedDate { get; set; }
    }

    #endregion
}
